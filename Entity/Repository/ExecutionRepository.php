<?php

namespace JMose\CommandSchedulerBundle\Entity\Repository;

use JMose\CommandSchedulerBundle\Entity\Execution;

/**
 * ExecutionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExecutionRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * find all executions fo a given command
     *
     * @param integer $commandId
     * @return array
     */
    public function findCommandExecutions($commandId)
    {
        $logs = $this->findBy(array('command' => $commandId), array('id' => 'ASC'));
        $result = array();
        /** @var Execution $log */
        foreach($logs as $log){
            array_push($result, array(
                'executionDate' => $log->getExecutionDate(),
                'runtime' =>$log->getRuntime(),
                'returnCode' => $log->getReturnCode()
            ));
        }

        return $result;
    }

    /**
     * find all executions for command given by id, keep at most $limit
     *
     * @param int $commandId Command ID
     * @param int $limit number of executions to keep at most
     */
    public function findCommandExecutionsLimitNumber($commandId, $limit) {
        $logs = $this->findBy(
            array('command' => $commandId),
            array('id' => 'ASC')
        );

        $logs = array_slice($logs, $limit);

        return $logs;
    }
}
